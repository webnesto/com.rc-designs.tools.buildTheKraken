// Single line comments only allowed (not technically JSON compliant, but allows for non-value commenting)
// Use "/" for file paths.  If not, "\" must be escaped (NOTE: will work in Windows either way);
// TODO: when documenting use - be sure to indicate that any array properties are completely overrwritten when specified in additional build files.
{
  "buildEnv": "prod"                      // "prod" build environment - only valid values are "prod" and "dev"
, "outputDir": ""                         // default's to working directory
, "sourceDir": "."                        // relative to root
// NOTE: "subs" not yet implemented
//, "subs": [                             // series of subfolders to parse as "src" - inherently added to global ignores.
//    ""                                  // working directory
//  ]
, "folders": {                            // folders created by builder
    "scratch": "tmp"                      // directory name/path for temporary file creation during build (will be deleted on cleanup) - created as "root"/"scratch"
  , "build":   "bin"                      // target for built files.  NOTE: will be placed inside filetype directory: "root"/[js/css/html]/"build"
  , "package": "pkg"                      // TODO: target for package of files (if production.package flag set to true).  NOTE: files will be placed inside filetype sub-directory: "root"/"package"/[js/css/html]
  }
, "doDeletes": "true"                     // when true, target folders contents will be stripped of file type before build insertion (clears out dead wood) - TODO: allow on a type by type basis.
, "keepScratch": "false"                  // when true, prevents removal of scratch directory upon completion ( note: if not deleting, and scratch in source dir - scratch should be added to ignores lists )
, "types": [ "Javascript","CSS","HTML" ]  // types of files to be grouped / built.
, "ignores": [                            // global folders ignored ( ignored for all file types )
    "tmp"                                 // ignoring scratch dir, by default.
  ]
, "typeProps": {
    "Javascript": {
      "extension": "js"
//    , "extension_out": "jcrazy"         // Optional - different extension for generated file(s)
    , "block_comment": "/*! -CONTENT- */"
    , "ignores": [                        // Foldernames to ignore
//        "folderName"                    // Example - ignores folder named "folderName"
      ]
    , "firsts": [                         // filenames / patterns (identified by first two characters "=~") to be sorted first in build (takes precedence over "lasts").
//        "=~^at_set"                     // Example - matches all filenames that start with "b"
//      , "=~_"                           // Example - matches any filename that includes "_"
      ]
    , "lasts": [                          // filenames / patterns (identified by first tow characters "=~") to be sorted last in build
//        "at_unset.js"                   // Example - matches file named "at_unset.js"
      ]
    , "folder": ""                        // Relative to folders.source (see above) If any value included will target search for files of this type to a specific directory (rather than using all of folders.source)
    , "build": ""                         // Relative to root.  If any value,  root/[value]/[folders.build]/ will be used instead of root/[extension]/[folders.build]/
    , "prepend": ""                       // will prepend all content - good for wrapper functions
    , "postpend": ""                      // will finish content - good for closing wrapper functions
    , "env": {
        "prod": {                         // commands run once for each "built" file when the build environment matches this key.  Available variables "${scriptsPath}", "${infile}", "${outfile}"
          "commands": {
            "perFile": [
              "java  -jar \"${scriptsPath}/ext/yuicompressor-2.4.2.jar\" ${infile} -o ${outfile}  --line-break 1000" // -v"
            ]
          , "perDirectory": [
              // None for prod.
            ]
          , "postProcess": [
              "java  -jar  \"${scriptsPath}/ext/jsdoc-toolkit/jsrun.jar\" \"${scriptsPath}/ext/jsdoc-toolkit/app/run.js\" -a -r=10 -d=${root}/docs/js -t=${scriptsPath}/ext/jsdoc-toolkit/templates/jsdoc ${files}"
            ]
          }
        }
      , "dev": {
          "commands": {
            "perFile": [
              // None for dev.
            ]
          , "perDirectory": [
              // None for dev.
            ]
          , "postProcess": [
              // None for dev.
            ]
          }
//      , "extension_out": ""           // Optional - different extension for use in this build environment.
        , "importString": "document.write('<scr'+'ipt type=\"text/javascript\" src=\"-CONTENT-\"></scr'+'ipt>')"
        }
      }
    }
  , "CSS": {
      "extension": "css"
    , "block_comment": "/*! -CONTENT- */"
    , "ignores": []
    , "firsts": []
    , "lasts": []
    , "folder": ""
    , "build": ""
    , "prepend": ""
    , "postpend": ""
    , "env": {
        "prod": {                         // commands run once for each "built" file when the build environment matches this key.  Available variables "${scriptsPath}", "${infile}", "${outfile}"
          "commands": {
            "perFile": [
              "java  -jar \"${scriptsPath}/ext/yuicompressor-2.4.2.jar\" ${infile} -o ${outfile}  --line-break 1000 " //-v"
            ]
          , "perDirectory": [
              // None for prod.
            ]
          , "postProcess": [
              // None for prod.
            ]

          }
        }
      , "dev": {
          "commands": {
            "perFile": [
              // None for dev.
            ]
          , "perDirectory": [
              // None for dev.
            ]
          , "postProcess": [
              // None for dev.
            ]
          }
        , "importString": "@import \"-CONTENT-\";"
        }
      }
    }
  , "LESS CSS": {
      "extension": "less"
    , "extension_out": "css"
    , "block_comment": "/* -CONTENT- */"
    , "ignores": []
    , "firsts": []
    , "lasts": []
    , "folder": ""
    , "build": "css/bin"
    , "prepend": ""
    , "postpend": ""
    , "env": {
        "prod": {                         // commands run once for each "built" file when the build environment matches this key.  Available variables "${scriptsPath}", "${infile}", "${outfile}"
          "commands": {
            "perFile": [
              "java -jar \"${scriptsPath}/ext/rhino/js.jar\" \"${scriptsPath}/ext/less-rhino-1.1.5.js\" ${infile} ${outfile}"
            , "java -jar \"${scriptsPath}/ext/yuicompressor-2.4.2.jar\" ${infile} -o ${outfile}  --line-break 1000 " //-v"
            ]
          , "perDirectory": [
              // None for prod.
            ]
          , "postProcess": [
              "java  -jar  \"${scriptsPath}/ext/jsdoc-toolkit/jsrun.jar\" \"${scriptsPath}/ext/jsdoc-toolkit/app/run.js\" -a -r=10 -d=${root}/docs/js -t=${scriptsPath}/ext/jsdoc-toolkit/templates/jsdoc ${files}"
            ]
          }
        }
      , "dev": {
          "commands": {
            "perFile": [
              // None for dev.
            ]
          , "perDirectory": [
              // None for dev.
            ]
          , "postProcess": [
              // None for dev.
            ]
          }
        , "importString": "@import \"-CONTENT-\";"
        }
      }
    }
  , "HTML": {
      "extension": "html"
    , "block_comment": "<!-- -CONTENT- -->"
    , "ignores": []
    , "firsts": []
    , "lasts": []
    , "folder": ""
    , "build": ""
    , "prepend": ""
    , "postpend": ""
    , "env": {
        "dev": {
          "commands": {
            "perFile": [
              // None for dev.
            ]
          , "perDirectory": [
              // None for dev.
            ]
          , "postProcess": [
              // None for dev.
            ]
          }
        , "importString": "<!--#include virtual=\"-CONTENT-\" -->"
        }
      }
    }
  }
, "env": {

    "prod": {              // Only used in production builds
      "definedArgs": [            // Variables for use in preprocessing - keys included will be kept
//      , "debug"          // Example - This would ensure that all code enclosed in #ifdef debug -> #endif blocks will be included (unless innerblock disables)
//      , "debugInner"     // Example - This would ensure that all code encolsed in #ifdef debugInner -> #endif blocks will be included (unless innerblock disables)
//      , "etc"            // Example - And so on
      ]
      , "processIfdefs": "true"
      , "flattenImports": "true"
    }
  , "dev": {
      "prependToPath": ""            // Prepended to all paths in dev build - No trailing slashes
    }

  }
}
